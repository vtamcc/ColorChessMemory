{"version":3,"sources":["assets/ColorMemoryChess/scripts/MemoryChess_GameOver.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;;;;;;;;;;;;;;AAEtF,+DAA0D;AAC1D,2DAAsD;AAEhD,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAiD,uCAAY;IAA7D;QAAA,qEAyCC;QAtCG,WAAK,GAAa,IAAI,CAAC;QAGvB,UAAI,GAAW,OAAO,CAAC;;QAkCvB,iBAAiB;IACrB,CAAC;IAjCG,wBAAwB;IAExB,oCAAM,GAAN,cAAW,CAAC;IAEZ,mCAAK,GAAL;IAEA,CAAC;IAGD,sCAAQ,GAAR;QACI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC;IACrC,CAAC;IAED,qCAAO,GAAP;QACI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,CAAC;IAED,qCAAO,GAAP;QACI,4BAAkB,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;QAChD,8BAAoB,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAChD,CAAC;IAED,0CAAY,GAAZ;QACI,4BAAkB,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;QAChD,8BAAoB,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAED,oCAAM,GAAN;QACI,4BAAkB,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC;QAChD,8BAAoB,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAChD,CAAC;IApCD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;sDACI;IAGvB;QADC,QAAQ;qDACc;IANN,mBAAmB;QADvC,OAAO;OACa,mBAAmB,CAyCvC;IAAD,0BAAC;CAzCD,AAyCC,CAzCgD,EAAE,CAAC,SAAS,GAyC5D;kBAzCoB,mBAAmB","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport MemoryChess_GamePlay from \"./MemoryChess_GamePlay\";\nimport MemoryChess_Global from \"./MemoryChess_Global\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class MemoryChes_GameOver extends cc.Component {\n\n    @property(cc.Label)\n    label: cc.Label = null;\n\n    @property\n    text: string = 'hello';\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {}\n\n    start () {\n\n    }\n    \n\n    showLose() {\n        this.label.string = \"Game Over \";\n    }\n\n    showWin() {\n        this.label.string = \"Win!!!\";\n    }\n\n    onClose() {\n        MemoryChess_Global.soundManager.onItemClicked();\n        MemoryChess_GamePlay.instance.nodeDestroy();\n    }\n\n    onClickReset() {\n        MemoryChess_Global.soundManager.onItemClicked();\n        MemoryChess_GamePlay.instance.resetGame();\n        this.node.destroy();\n    }\n\n    onHome() {\n        MemoryChess_Global.soundManager.onItemClicked();\n        MemoryChess_GamePlay.instance.nodeDestroy();\n    }\n    // update (dt) {}\n}\n"]}