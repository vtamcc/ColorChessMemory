{"version":3,"sources":["assets\\ColorMemoryChess\\scripts\\MemoryChess_GamePlay.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport MemoryChess_Global from \"./MemoryChess_Global\";\r\nimport MemoryChess_Item from \"./MemoryChess_Item\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class MemoryChess_GamePlay extends cc.Component {\r\n    public static instance: MemoryChess_GamePlay = null;\r\n    @property(cc.Prefab)\r\n    prfItem: cc.Prefab = null;\r\n    @property(cc.Node)\r\n    nodeItem: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    nodeDice: cc.Node = null;\r\n\r\n    @property(cc.Sprite)\r\n    spfDice: cc.Sprite = null;\r\n\r\n\r\n    @property(cc.SpriteFrame)\r\n    listSpfChess: cc.SpriteFrame[] = [];\r\n\r\n    @property(cc.AnimationClip)\r\n    listAnimation: cc.AnimationClip[] = [];\r\n    numCircles = 3;\r\n    listColor = [];\r\n    listIdColor = [];\r\n    isClick = false;\r\n    isClickItem = false;\r\n    isPlayerTurn = true;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        MemoryChess_GamePlay.instance = this;\r\n        this.randomColor();\r\n        this.shuffle();\r\n        this.renItem();\r\n        this.startPlayerTurn();\r\n    }\r\n\r\n    startPlayerTurn() {\r\n        console.log(\"Luot cua nguoi choi \");\r\n        this.isPlayerTurn = true;\r\n        this.isClick = false;\r\n    }\r\n\r\n    endPlayerTurn() {\r\n        this.isClick = true;\r\n        this.scheduleOnce(() => {\r\n            this.startTurnBot();\r\n        },2.5)\r\n    }\r\n\r\n    startTurnBot() {\r\n        console.log(\"Luot cua nguoi Bot \");\r\n        this.isClick = false;\r\n        this.clickRoll();\r\n        console.log(\"lengt \", this.node.children.length);\r\n        let ramdomIndex = Math.floor(Math.random() * this.nodeItem.children.length);\r\n    } \r\n\r\n    randomColor() {\r\n        for (let i = 0; i < MemoryChess_Global.arrColor.length; i++) {\r\n            this.listColor.push(MemoryChess_Global.arrColor[i]);\r\n            this.listColor.push(MemoryChess_Global.arrColor[i]);\r\n            this.listColor.push(MemoryChess_Global.arrColor[i]);\r\n            this.listColor.push(MemoryChess_Global.arrColor[i]);\r\n        }\r\n\r\n        let ramdomIndex = Math.floor(Math.random() * 6) + 1;\r\n        this.listColor.push(ramdomIndex);\r\n\r\n    }\r\n\r\n    shuffle() {\r\n        for (let i = this.listColor.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [this.listColor[i], this.listColor[j]] = [this.listColor[j], this.listColor[i]];\r\n        }\r\n        console.log(\"list Color \", this.listColor);\r\n    }\r\n\r\n    renItem() {\r\n        // let arrRadius = [200, 120, 0];\r\n        // let numPiecesInCircles = [16, 8, 1];\r\n\r\n        // for (let circle = 0; circle < this.numCircles; circle++) {\r\n        //     let radius = arrRadius[circle];\r\n        //     let numPiecesInCircle = numPiecesInCircles[circle];\r\n        //     for (let i = 0; i < numPiecesInCircle; i++) {\r\n        //         let angle = (i / numPiecesInCircle) * Math.PI * 2;\r\n        //         let x = Math.cos(angle) * radius;\r\n        //         let y = Math.sin(angle) * radius;\r\n        //         let itemNode = cc.instantiate(this.prfItem);\r\n        //         let item = itemNode.getComponent(MemoryChess_Item);\r\n        //         itemNode.setPosition(x, y);\r\n        //         item.setData(this.listColor[i]);\r\n        //         this.nodeItem.addChild(itemNode);\r\n\r\n        //     }\r\n        // }\r\n        let gridSize = 5;\r\n        let cellSpacing = 35;\r\n        let startX = -(gridSize - 1) * (this.prfItem.data.width + cellSpacing) / 2;\r\n        let startY = (gridSize - 1) * (this.prfItem.data.height + cellSpacing) / 2;\r\n\r\n        for (let i = 0; i < this.listColor.length; i++) {\r\n            let row = Math.floor(i / gridSize);\r\n            let col = i % gridSize;\r\n\r\n            // let item = cc.instantiate(this.prfItem).getComponent(MemoryChess_Item)\r\n            // item.setData(this.listColor[i]);\r\n            // this.nodeItem.addChild(item.node);\r\n            let item = cc.instantiate(this.prfItem).getComponent(MemoryChess_Item);\r\n            item.setData(this.listColor[i]);\r\n            let x = startX + col * (item.node.width + cellSpacing);\r\n            let y = startY - row * (item.node.height + cellSpacing);\r\n            item.node.setPosition(x, y);\r\n            let delay = i * 0.2; \r\n            this.moveChessBack(item.sprItemBack,delay);\r\n            this.nodeItem.addChild(item.node);\r\n        }\r\n    }\r\n\r\n    clickRoll() {\r\n        if (this.isClick || !this.isPlayerTurn) {\r\n            return;\r\n        }\r\n        let idColor = Math.floor(Math.random() * 6) + 1;\r\n        this.nodeDice.getComponent(cc.Animation).play(this.listAnimation[idColor].name);\r\n        this.listIdColor.push(idColor);\r\n        console.log(\"idColor \", this.listIdColor);\r\n        this.isClickItem = true;\r\n        this.isClick = true;\r\n\r\n\r\n        console.log('isClick ', this.isClick);\r\n\r\n\r\n    }\r\n    \r\n    moveChessBack(node, delay) {\r\n        let originalY = node.y;\r\n        cc.tween(node)\r\n            .delay(delay)\r\n            .to(0.5, { y: 68 })\r\n            .delay(1)\r\n            .to(0.5, { y: originalY })\r\n            .start();\r\n    }\r\n\r\n    moveToCenterAndDestroy(node, disableNode) {\r\n        let centerX = 0;\r\n        let centerY = 0;\r\n        node.zIndex = 100;\r\n        //disableNode.active = false;\r\n        // cc.tween(node)\r\n        //     .to(0.5, { x: centerX, y: centerY, scale: 1.5 })\r\n        //     .call(() => {\r\n        //         this.scheduleOnce(() => {\r\n        //             node.destroy();\r\n        //         }, 0.5)\r\n        //     })\r\n        //     .start();\r\n\r\n        cc.tween(node)\r\n        .to(0.5, { x: centerX, y: centerY, scale: 1.5 })\r\n        .call(() => {\r\n            \r\n            cc.tween(disableNode)\r\n                .to(0.5, { y: disableNode.y + 65 })\r\n                .delay(0.5)\r\n                .to(0.5, {y: 0})\r\n                .delay(0.8) \r\n                .call(() => {\r\n                    disableNode.active = false;  \r\n                    node.destroy();\r\n                })\r\n                .start();\r\n        })\r\n        .start();\r\n    }\r\n\r\n\r\n    moveToCenterAndReturn(node, disableNode) {\r\n\r\n        let centerX = 0;\r\n        let centerY = 0;\r\n        let originalX = node.x;\r\n        let originalY = node.y;\r\n        node.zIndex = 100;\r\n        //disableNode.active = false;\r\n        // cc.tween(node)\r\n        //     .to(0.5, { x: centerX, y: centerY, scale: 1.5 })\r\n        //     .delay(0.5)\r\n        //     .call(() => {\r\n        //         disableNode.active = true;\r\n        //     })\r\n        //     .to(0.5, { x: originalX, y: originalY, scale: 1.0 })\r\n        //     .start();\r\n        cc.tween(node)\r\n        .to(0.5, { x: centerX, y: centerY, scale: 1.5 })\r\n        .delay(0.5)\r\n        .call(() => {\r\n            cc.tween(disableNode)\r\n                .to(0.5, { y: disableNode.y + 65 })\r\n                .delay(0.5)\r\n                .to(0.5, { y: 0})\r\n                .start();\r\n        })\r\n        .delay(1.5)\r\n        .to(0.5, { x: originalX, y: originalY, scale: 1.0 })\r\n        .call(() => {\r\n            node.zIndex = 1;\r\n        })\r\n        .start();\r\n    }\r\n\r\n    checkIdColor(idColor, node, disableNode) {\r\n       \r\n        console.log(\"listColor \", this.listColor);\r\n        if (this.listIdColor[0] == idColor) {\r\n            console.log(\"dung \");\r\n            let index = this.listColor.indexOf(idColor);\r\n            if (index !== -1) {\r\n                this.listColor.splice(index, 1);\r\n            }\r\n\r\n            this.moveToCenterAndDestroy(node, disableNode);\r\n\r\n        } else {\r\n            console.log(\"Sai \");\r\n            this.moveToCenterAndReturn(node, disableNode);\r\n        }\r\n\r\n        if (this.listColor.length == 0) {\r\n            this.isClick = true;\r\n            console.log(\"Win\");\r\n          \r\n        }\r\n\r\n\r\n\r\n        console.log(\"listColor \", this.listColor);\r\n        this.listIdColor = [];\r\n\r\n        if (this.isPlayerTurn) {\r\n            this.endPlayerTurn();\r\n        }\r\n    }\r\n\r\n    \r\n    onClickBack() {\r\n        this.node.destroy();\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}