{"version":3,"sources":["assets/ColorMemoryChess/scripts/MemoryChess_Main.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;;;;;;;;;;;;;;AAEtF,+DAA0D;AAC1D,2DAAsD;AACtD,qEAAgE;AAE1D,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA8C,oCAAY;IAA1D;QAAA,qEAuDC;QAnDG,iBAAW,GAAc,IAAI,CAAC;QAG9B,oBAAc,GAAc,IAAI,CAAC;;QA+CjC,iBAAiB;IACrB,CAAC;IA/CG,wBAAwB;IAExB,iCAAM,GAAN;QACI,IAAI,gBAAgB,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAC7D,IAAI,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAC1D,IAAI,CAAC,YAAY,CAAC;YACd,IAAG,gBAAgB,IAAI,IAAI,EAAE;gBACzB,4BAAkB,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,GAAG,4BAAkB,CAAC,UAAU,CAAC;aACnF;iBAAK;gBACF,4BAAkB,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;gBAC7D,iGAAiG;gBACjG,4BAAkB,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,GAAG,4BAAkB,CAAC,UAAU,CAAC;aACnF;YAED,IAAG,eAAe,IAAI,IAAI,EAAE;gBACxB,4BAAkB,CAAC,YAAY,CAAC,gBAAgB,CAAC,MAAM,GAAG,4BAAkB,CAAC,UAAU,CAAC;aAC3F;iBAAK;gBACF,4BAAkB,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBAC5D,4BAAkB,CAAC,YAAY,CAAC,gBAAgB,CAAC,MAAM,GAAG,4BAAkB,CAAC,UAAU,CAAA;gBACvF,wGAAwG;aAC3G;QAEL,CAAC,EAAC,GAAG,CAAC,CAAA;IAKV,CAAC;IAED,oCAAS,GAAT;QACI,4BAAkB,CAAC,YAAY,CAAC,aAAa,EAAE,CAAA;QAC/C,IAAI,QAAQ,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,YAAY,CAAC,8BAAoB,CAAC,CAAA;QAClF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,uCAAY,GAAZ;QACI,4BAAkB,CAAC,YAAY,CAAC,aAAa,EAAE,CAAA;QAC/C,IAAI,OAAO,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,iCAAuB,CAAC,CAAA;QACvF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,gCAAK,GAAL;IAEA,CAAC;IA/CD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;yDACU;IAG9B;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;4DACa;IAPhB,gBAAgB;QADpC,OAAO;OACa,gBAAgB,CAuDpC;IAAD,uBAAC;CAvDD,AAuDC,CAvD6C,EAAE,CAAC,SAAS,GAuDzD;kBAvDoB,gBAAgB","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport MemoryChess_GamePlay from \"./MemoryChess_GamePlay\";\nimport MemoryChess_Global from \"./MemoryChess_Global\";\nimport MemoryChess_SettingView from \"./MemoryChess_SettingView\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class MemoryChess_Main extends cc.Component {\n\n\n    @property(cc.Prefab)\n    prfGamePlay: cc.Prefab = null;\n\n    @property(cc.Prefab)\n    prfSettingView: cc.Prefab = null;\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        let savedMusicVolume = localStorage.getItem('musicBgVolume');\n        let saveSoundVolume = localStorage.getItem('soundVolume');\n        this.scheduleOnce(() => {\n            if(savedMusicVolume == null) {\n                MemoryChess_Global.soundManager.music_bg.volume = MemoryChess_Global.volumMusic;\n            }else {\n                MemoryChess_Global.volumMusic = JSON.parse(savedMusicVolume);\n                //console.log(\"MemoryChess_Global.soundManager.music_bg.volume \",  MemoryChess_Global.volumMusic)\n                MemoryChess_Global.soundManager.music_bg.volume = MemoryChess_Global.volumMusic;\n            }\n\n            if(saveSoundVolume == null) {\n                MemoryChess_Global.soundManager.audioSound_click.volume = MemoryChess_Global.volumSound;\n            }else {\n                MemoryChess_Global.volumSound = JSON.parse(saveSoundVolume);\n                MemoryChess_Global.soundManager.audioSound_click.volume = MemoryChess_Global.volumSound\n                //console.log(\"MemoryChess_Global.soundManager.audioSound_click.volume \", MemoryChess_Global.volumSound)\n            }\n            \n        },0.5)\n       \n\n       \n       \n    }\n\n    clickPlay() {\n        MemoryChess_Global.soundManager.onItemClicked()\n        let gamePlay = cc.instantiate(this.prfGamePlay).getComponent(MemoryChess_GamePlay)\n        this.node.addChild(gamePlay.node);\n    }\n\n    clickSetting() {\n        MemoryChess_Global.soundManager.onItemClicked()\n        let setting = cc.instantiate(this.prfSettingView).getComponent(MemoryChess_SettingView)\n        this.node.addChild(setting.node);\n    }\n\n    start () {\n\n    }\n\n\n    // update (dt) {}\n}\n"]}