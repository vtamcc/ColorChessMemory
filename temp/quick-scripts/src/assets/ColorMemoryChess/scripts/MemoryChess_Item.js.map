{"version":3,"sources":["assets/ColorMemoryChess/scripts/MemoryChess_Item.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;;;;;;;;;;;;;;AAEtF,+DAA0D;AAC1D,2DAAsD;AAEhD,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA8C,oCAAY;IAA1D;QAAA,qEAgCC;QA7BG,WAAK,GAAa,IAAI,CAAC;QAGvB,aAAO,GAAc,IAAI,CAAC;QAE1B,QAAE,GAAG,CAAC,CAAC;;IAwBX,CAAC;IAtBG,gCAAK,GAAL;IAEA,CAAC;IAED,kCAAO,GAAP,UAAQ,EAAE;QACN,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,4BAAkB,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;QAC1D,6BAA6B;IAEjC,CAAC;IAED,oCAAS,GAAT;QACI,IAAI,8BAAoB,CAAC,QAAQ,CAAC,OAAO,EAAE;YACvC,8BAAoB,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACpD,8BAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;YACrD,8BAAoB,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAC1D,8BAAoB,CAAC,QAAQ,CAAC,OAAO,GAAI,KAAK,CAAC;YAC/C,OAAO,CAAC,GAAG,CAAC,WAAW,EAAG,8BAAoB,CAAC,QAAQ,CAAC,OAAO,CAAE,CAAA;SACpE;aAAM;YACH,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;SACtC;IACL,CAAC;IA5BD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;mDACI;IAGvB;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;qDACM;IANT,gBAAgB;QADpC,OAAO;OACa,gBAAgB,CAgCpC;IAAD,uBAAC;CAhCD,AAgCC,CAhC6C,EAAE,CAAC,SAAS,GAgCzD;kBAhCoB,gBAAgB","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport MemoryChess_GamePlay from \"./MemoryChess_GamePlay\";\nimport MemoryChess_Global from \"./MemoryChess_Global\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class MemoryChess_Item extends cc.Component {\n\n    @property(cc.Label)\n    label: cc.Label = null;\n\n    @property(cc.Sprite)\n    sprItem: cc.Sprite = null;\n\n    id = 0;\n\n    start() {\n\n    }\n\n    setData(id) {\n        this.id = id;\n        this.label.string = MemoryChess_Global.arrColor[id] + ' ';\n        //this.sprItem.spriteFrame = \n\n    }\n\n    clickItem() {\n        if (MemoryChess_GamePlay.instance.isClick) {\n            MemoryChess_GamePlay.instance.checkIdColor(this.id);\n            MemoryChess_GamePlay.instance.nodeDice.active = true;\n            MemoryChess_GamePlay.instance.spfDice.node.active = false;\n            MemoryChess_GamePlay.instance.isClick  = false;\n            console.log(\"is click \",  MemoryChess_GamePlay.instance.isClick )\n        } else {\n            console.log(\"Chua click xuc xac \");\n        }\n    }\n}\n"]}